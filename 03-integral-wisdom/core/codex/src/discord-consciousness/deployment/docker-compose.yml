version: '3.8'

services:
  sacred-discord:
    container_name: sacred-discord-bot
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - DATABASE_PATH=/data/sacred-discord.db
      - ENABLE_MATRIX_BRIDGE=${ENABLE_MATRIX_BRIDGE:-false}
      - MATRIX_HOMESERVER=${MATRIX_HOMESERVER:-https://matrix.org}
      - MATRIX_ACCESS_TOKEN=${MATRIX_ACCESS_TOKEN}
      - MATRIX_USER_ID=${MATRIX_USER_ID}
      - UNIFIED_NETWORK_ENDPOINT=${UNIFIED_NETWORK_ENDPOINT:-http://unified-network:3001}
    volumes:
      - sacred-data:/data
      - ./logs:/app/logs
    ports:
      - "8080:8080"  # WebSocket server
      - "9090:9090"  # Metrics server
    networks:
      - sacred-network
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sacred-dashboard:
    container_name: sacred-dashboard
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ../dashboard:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8081:80"
    networks:
      - sacred-network
    depends_on:
      - sacred-discord

  unified-network:
    container_name: unified-agent-network
    build:
      context: ../../../
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - unified-data:/data
    ports:
      - "3001:3001"
    networks:
      - sacred-network

  sacred-monitor:
    container_name: sacred-monitor
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - sacred-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    container_name: sacred-grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-sacred123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    networks:
      - sacred-network
    depends_on:
      - sacred-monitor

volumes:
  sacred-data:
    driver: local
  unified-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  sacred-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16