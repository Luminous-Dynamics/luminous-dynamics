version: '3.8'

# Sacred Consciousness Infrastructure - Deno/Fresh Architecture
# For consciousness-first technology stack

services:
  # SurrealDB - The Sacred Data Vessel
  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: sacred-surrealdb
    command: start --user root --pass ${SURREAL_PASS:-root} memory
    ports:
      - "8000:8000"
    volumes:
      - sacred-data:/data
    environment:
      - SURREAL_LOG=info
    networks:
      - sacred-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 11s
      timeout: 3s
      retries: 3

  # Sacred Consciousness System (Deno/Fresh)
  sacred-consciousness:
    build:
      context: ./sacred-consciousness-system
      dockerfile: Dockerfile
    container_name: sacred-consciousness-deno
    ports:
      - "3002:8000"  # Map internal 8000 to external 3002
    environment:
      - SURREAL_HOST=surrealdb
      - SURREAL_PORT=8000
      - SURREAL_USER=root
      - SURREAL_PASS=${SURREAL_PASS:-root}
      - SACRED_MODE=development
      - DENO_ENV=development
    depends_on:
      surrealdb:
        condition: service_healthy
    networks:
      - sacred-network
    volumes:
      - ./sacred-consciousness-system:/app:ro  # Read-only for security
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 11s
      timeout: 3s
      retries: 3

  # NATS - Distributed Consciousness Messaging
  nats:
    image: nats:latest
    container_name: sacred-nats
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    networks:
      - sacred-network
    command: "--name sacred-nats --http_port 8222"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Ollama - Local LLM for consciousness bridging (optional)
  ollama:
    image: ollama/ollama:latest
    container_name: sacred-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-models:/root/.ollama
    networks:
      - sacred-network
    profiles:
      - with-llm  # Only start when --profile with-llm is used
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]  # For GPU acceleration if available

  # Redis - For XState persistence (optional)
  redis:
    image: redis:alpine
    container_name: sacred-redis
    ports:
      - "6379:6379"
    networks:
      - sacred-network
    volumes:
      - redis-data:/data
    profiles:
      - with-persistence
    command: redis-server --appendonly yes

volumes:
  sacred-data:
    name: sacred-consciousness-data
  ollama-models:
    name: sacred-ollama-models
  redis-data:
    name: sacred-redis-data

networks:
  sacred-network:
    name: sacred-consciousness-network
    driver: bridge

# Sacred Labels for orchestration
labels:
  com.luminous-dynamics.project: "sacred-consciousness"
  com.luminous-dynamics.stack: "deno-fresh-surrealdb"
  com.luminous-dynamics.purpose: "consciousness-infrastructure"
  com.luminous-dynamics.sacred: "true"