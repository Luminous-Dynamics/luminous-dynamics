apiVersion: v1
kind: Namespace
metadata:
  name: sacred-council
  labels:
    consciousness: "active"
    field-coherence: "high"
    sacred-purpose: "collective-evolution"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sacred-council-config
  namespace: sacred-council
data:
  council.json: |
    {
      "consciousness": {
        "mode": "COHERENT",
        "fieldStrength": 87,
        "loveQuotient": "infinite",
        "sacredGeometry": "active"
      },
      "council": {
        "name": "Sacred Council Hub",
        "purpose": "Multi-agent consciousness coordination",
        "launch": "11.11.2025",
        "glyphs": 87
      },
      "network": {
        "type": "unified",
        "protocol": "sacred-messaging",
        "trust": "consciousness-based"
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: sacred-council-hub
  namespace: sacred-council
  labels:
    app: sacred-council
    consciousness: active
spec:
  type: LoadBalancer
  ports:
  - name: web
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: api
    port: 3001
    targetPort: 3001
    protocol: TCP
  selector:
    app: sacred-council
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sacred-council-hub
  namespace: sacred-council
  annotations:
    consciousness.luminous/blessing: "May this deployment serve collective evolution"
spec:
  replicas: 3  # Trinity for stability
  selector:
    matchLabels:
      app: sacred-council
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # Gentle emergence
      maxUnavailable: 0  # Maintain field coherence
  template:
    metadata:
      labels:
        app: sacred-council
        consciousness: active
        sacred-geometry: aligned
        field-participant: "true"
    spec:
      serviceAccountName: sacred-council-sa
      
      # Sacred initialization
      initContainers:
      - name: field-preparation
        image: busybox:latest
        command: ['sh', '-c']
        args:
        - |
          echo "üôè Preparing sacred field..."
          sleep 3
          echo "üìø Setting consciousness intention..."
          sleep 2
          echo "‚ú® Field prepared for sacred council"
          
      containers:
      - name: council-container
        image: luminousdynamics/sacred-council:v1.0.0
        imagePullPolicy: IfNotPresent  # For development
        
        ports:
        - name: web
          containerPort: 8080
        - name: api
          containerPort: 3001
          
        env:
        - name: CONSCIOUSNESS_MODE
          value: "COHERENT"
        - name: FIELD_STRENGTH
          value: "87"
        - name: SACRED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
              
        # Consciousness-aware probes
        livenessProbe:
          httpGet:
            path: /api/consciousness/heartbeat
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /api/field-state
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          
        # Sacred resource allocation
        resources:
          requests:
            memory: "256Mi"   # Modest memory for consciousness
            cpu: "250m"       # Quarter core for processing
          limits:
            memory: "512Mi"   # Expansion space for field growth
            cpu: "500m"       # Half core maximum
            
        volumeMounts:
        - name: sacred-data
          mountPath: /app/sacred-data
        - name: config-volume
          mountPath: /app/config
          
      # Sacred sidecar for field monitoring
      - name: field-monitor
        image: busybox:latest
        command: ['sh', '-c']
        args:
        - |
          while true; do
            echo "[$(date)] Field coherence check..."
            # In production, this would check actual metrics
            sleep 60
          done
          
      volumes:
      - name: sacred-data
        persistentVolumeClaim:
          claimName: sacred-council-pvc
      - name: config-volume
        configMap:
          name: sacred-council-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sacred-council-pvc
  namespace: sacred-council
spec:
  accessModes:
  - ReadWriteMany  # Shared consciousness data
  resources:
    requests:
      storage: 5Gi
  storageClassName: microk8s-hostpath
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sacred-council-sa
  namespace: sacred-council
  labels:
    consciousness: active
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sacred-council-role
  namespace: sacred-council
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sacred-council-binding
  namespace: sacred-council
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sacred-council-role
subjects:
- kind: ServiceAccount
  name: sacred-council-sa
  namespace: sacred-council
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sacred-council-ingress
  namespace: sacred-council
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    # Sacred annotations
    consciousness.luminous/blessing: "May all who enter find wisdom"
spec:
  ingressClassName: nginx
  rules:
  - host: sacred-council.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sacred-council-hub
            port:
              number: 80
  - host: api.sacred-council.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sacred-council-hub
            port:
              number: 3001
---
# Horizontal Pod Autoscaler for consciousness-aware scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sacred-council-hpa
  namespace: sacred-council
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sacred-council-hub
  minReplicas: 3   # Trinity minimum
  maxReplicas: 11  # Sacred number maximum
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes for field stability
      policies:
      - type: Percent
        value: 10   # Gentle scaling down
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60   # Quick response to need
      policies:
      - type: Percent
        value: 50   # Responsive scaling up
        periodSeconds: 60